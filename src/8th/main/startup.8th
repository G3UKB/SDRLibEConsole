(* 
	startup.8th
 
  Startup application tasks.
 
 Copyright C 2019 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
     
  Application startup is largely asyncronous as there are many tasks which
  initialise and communicate via messages. As things have to happen the righ
  order i.e Subscriptions before Publications the startup is synchronised.
  
  Startup is a gen-server task.
  	
*)

\ Set namespace
ns: sdr
with: fr.gs
with: fr.ps
with: fr.sm

\ ===============================================================================
\ Message Handlers

\ ========================================
\ Helpers

\ ----------------------------------
\ Wait for server to be running with timeout
: __startup_wait_server	SED: -- T
	10 repeat
		rst_server@ if 
			true ;;
		else
			0.3 sleep n:1-
		then
	while drop
	"Timeout waiting for server to start!" log
	false
;

\ ----------------------------------
\ Wait for ui to be running with timeout
: __startup_wait_ui	SED: -- T
	10 repeat
		rst_ui@ if 
			true ;;
		else
			0.3 sleep n:1-
		then
	while drop
	"Timeout waiting for UI to initialise!" log
	false
;

\ ========================================
\ Startup sequence.
: run_startup	SED: * --
	\ in: 	none
	\ out:	none
	drop
	
	"Creating gen-server tasks..." log
	\ ----------------------------------
	\ The connector task is our interface to the SDRLibE server.
	\ Connector init and subscriptions
	conn_init
	conn_subscribe
	
	\ ----------------------------------
	\ Models init only
	radio_model_init
	
	\ ----------------------------------
	\ Run the startup sequence
	\ This will check the server, start server, discover and configure
	\ It will not run the radio as that is a UI responsibility.
	sequencer_init
	
	"Running startup sequence..." log
	\ Wait for server to be running
	__startup_wait_server if
		\ Send the system events
		radio_model_sys_events
	else
		"No server, configuration only!" log
	then
	
	\ Wait for the UI to initialise
	__startup_wait_ui if
		\ Send the UI events
		radio_model_ui_events
	else
		"UI failed to initialise, cannot continue!" throw
	then
	
	"Startup task exiting..." log
;

\ ===============================================================================
\ Transient task run from app_main.
\ The proxy starts the STARTUP_TASK as gen-servers cannot be started from the main
\ thread as a GUI app blocks events on the main thread. 
: startup_proxy	SED: --
	\ Create the gen-server task
	STARTUP_TASK gen_server_new
	\ Now ask it to perform the startup sequence
	STARTUP_TASK ' run_startup [null] msg!
;

\ ========================================
\ Reset namespace
ns: user
(* 
	startup.8th
 
  Startup application tasks.
 
 Copyright C 2019 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
     
  Application startup is largely asyncronous as there are many tasks which
  initialise and communicate via messages. As things have to happen the righ
  order i.e Subscriptions before Publications the startup is synchronised.
  	
*)

\ Set namespace
ns: sdr
with: fr.gs
with: fr.ps
with: fr.sm

\ Temp to get going
: sender
	a:new swap a:push null +sender msg!
;

\ ===============================================================================
\ Runs on its own thread and then waits for closedown before exiting.
\ All gen-server tasks are started here but this task is not itself a
\ gen-server.
: startup_task	SED: --
	\ in: 	none
	\ out:	none
	t:curtask log
	
	\ ----------------------------------
	"Creating gen-server tasks..." log
	
	\ ----------------------------------
	\ The connector task is our interface to the SDRLibE server.
	\ Connector init and subscriptions
	conn_init
	conn_subscribe
	radio_default_startup
	\ Temp to get radio going before we send other events.
	CONNECTOR_TASK ' t_conn_set_default_route null sender "Set default route" log
	CONNECTOR_TASK ' t_conn_discover null sender "Discover" log
	CONNECTOR_TASK ' t_conn_start_server null sender "Start server" log
	CONNECTOR_TASK ' t_conn_start_radio 0 sender "Start radio" log
	1 sleep
	\ ----------------------------------
	\ Models init only
	radio_model_init
	\ ----------------------------------
	\ Finished all we need to do, the gen-server will just wait for termination.
	"Startup complete ..." log 
;

\ ----------------------------------
\ Send model SYS events
: startup_sys_events	SED: --
	radio_model_sys_events
;

\ ----------------------------------
\ Send model UI events
: startup_ui_events	SED: --
	radio_model_ui_events
;

\ ===============================================================================
\ The proxy starts the STARTUP_TASK as gen-servers cannot be started from the main
\ thread as a GUI app prevents events to the main thread. 
: startup_proxy	SED: --
	\ Start the gen-server task
	STARTUP_TASK gen_server_new
	STARTUP_TASK ' startup_task [null] msg!
	STARTUP_TASK ' startup_sys_events [null] msg!
	2 sleep
	STARTUP_TASK ' startup_ui_events [null] msg!
;

\ ========================================
\ Reset namespace
ns: user
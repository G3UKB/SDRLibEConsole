(*
	app_main.8th
 
  Models save/restore for the SDRLibEConsole application
 
 Copyright C 2018 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
*)

\ ============================================================================

\ Include all include files
"includes.8th" f:include

\ Make this a gui app
true app:isgui !
\ true log-async

\ Set namespace
ns: sdr

(*
	Entry point for the SDRLibEConsole application. This sets up the entire application
	and then hands control over to the GUI by exiting app:main whereupon the GUI event
	loop is entered. 
*)

\ ----------------------------------
\ Called on application exit
: cleanup
	"Shutdown in progress" log
	\ Close connector
	\ conn_term
	\ Close models
	\ option_model_term
	\ app_model_term
;

\ ----------------------------------
\ We run all startup tasks from here and wait for them to complete
: startup_task
	\ ----------------------------------
	\ Start the gen_server tasks
	\ This has to be done in the correct order as events will
	\ start flying around the system and we want the subscribers
	\ to be ready before the publishers else events will be missed.
	\ Set our task in the task registry
	"INIT_TASK" t:name!
	t:curtask "INIT_TASK" fr:gs_reg!
	
	\ Allocate param stack for this thread
	param_st_alloc
	
	"Create gen-server tasks..." log
	\ Initialise publish/subscribe
	' do_registrations fr:pubsub_init
	\ Testing only
	test_registrations
	\ Connector
	\ conn_init
	\ Models
	option_model_init
	2 sleep
	app_model_init
	2 sleep
	\ Connector - here until sequence sorted out
	conn_init
	"Created gen-server tasks" log
;

\ ===============================================================================
\ Application entry point  
: app:main	\ --

	\ ----------------------------------
	\ Set our task name
	"MainThrd" t:name!
	t:curtask . cr
	
	\ ----------------------------------
	\ Pretty print Json
	\ 2 G:json-pretty
	
	\ ----------------------------------
	\ Create test main window
	create_main
	
	\ ----------------------------------
	\ General initialisation
	\ Allocate param stack fot main thread
	param_st_alloc
	"Initial setup complete" log
	
	\ ----------------------------------
	\ Start the gen_server tasks
	' startup_task t:task

	\ ----------------------------------
  \ Set our cleanup word
  ' sdr:cleanup onexit
  
  \ On exit from app:main the GUI event loop is started
  "Exiting app_main" log
;

\ ========================================
\ Reset namespace
ns: user
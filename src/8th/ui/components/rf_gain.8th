(*
	rf-gain.8th
 
  RF-GAIN slider component for the DynamicSDR application
 
 Copyright C 2018 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
*)

needs stack/rstack
needs stack/utils

\ Use SDR namespace
ns: sdr

\ Be nice to use a new kind but layouts not supported yet 
{
	"kind" : "box",
	"alpha" : 0.5,
	"bg" : "lightcyan4",
	"visible" : false,
	"children" : [
		{
			"kind" : "slider",
			"alpha" : 0.5,
			"bg" : "lightcyan4",
			"min" : 0,
			"max" : 100,
			"interval" : 1,
			"popup-display" : true,
			"value-changed" : "sdr:new_rfgain"
		}
	]
} var, rfgain_panel

\ ============================================================================
\ GUI Events
\ Set the gain text in the status area
: set_rfgain_text					\ parent gain -- parent g.rfgain
	1 pick g:parent  				\ parent gain g.radio
	0 g:child 0 g:child			\ parent gain g.container
	"tx-rfgain-lbl" g:child \ parent gain g.rfgain
	swap n:int >s "%" s:+ g:text		\ parent g.rfgain
;

\ Set the text after an rfgain selection
: rfgain_set_text	\ parent rfgain id --
	{ "RFGAIN-TX": ' set_rfgain_text }
	case
	drop
;

: set_rfgain_model
	model_tx_set_rfgain
;

: rfgain_set_model	\ parent rfgain id --
	{"RFGAIN-TX": ' set_rfgain_model }
	case
	drop
;

\ GUI event for rfgain change
: new_rfgain							\ g value --
	\ Get parent
	null -rot	swap					\ null value g 
	dup g:parent 	 					\ null value g parent 
	\ Get the radio tx id and stash in the null hole
	"id" g:m@ 3 swap poke		\ rfgain-id value g parent 
	2 pick 4 pick 					\ rfgain-id value g parent value rfgain-id
	rfgain_set_model				\ rfgain-id value g parent
	rot											\ rfgain-id g parent value
	3 roll									\ g parent value rfgain-id
	rfgain_set_text 
;

\ ============================================================================
\ Subscriber Events
: rfgain_evt_tx_rfgain						\ a --
	\ "rfgain_evt_tx_rfgain" log
 	tx_window @ "tx-box" g:child		\ a tx-box
 	"RFGAIN-TX" g:child swap				\ RF_GAIN.box a
	"state" m:@ "rf-gain" m:@	nip		\ RF_GAIN.box a gain-value
	rot 0 g:child swap							\ a gain-slider gain-value
	g:set-value
	2drop
;

\ ============================================================================
\ Create a rfgain panel
: rfgain_panel_new						\ id bounds -- new-rfgain-gui
	rfgain_panel @ G:clone nip	\ id bounds rfgain-clone
	"id" 3 pick m:!
	"name" 3 pick m:! 
	"bounds" 2 pick m:! 
	nip nip g:new
;

\ Initialise a rfgain panel instance
: rfgain_panel_init	\  gui -- gui
;

\ Subscribe to tx gain
: rfgain_subscribe
	UI_RFGAIN ' rfgain_evt_tx_rfgain pubsub_subscribe
;

\ Restore namespace	
ns: user	
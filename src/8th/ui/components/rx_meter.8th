(*
	rx_meter.8th
 
  RX Meter component for the DynamicSDR application
 
 Copyright C 2018 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
*)

\ Use SDR namespace
ns: sdr

\ ===============================================================================
\ Panel definition
{
	"kind" : "box",
	"name" : "meter",
	"bounds" : "0,0,parent.width, parent.height",
	"bg" : "gray10",
	"font" : "Arial 11",
	"draw" : "sdr:rx_meter_draw",
	"timer-period" : 100,
	"timer" : "sdr:rx_meter-timer"
	
} var, rx_meter_panel

\ ===============================================================================
\ Metering definitions

: meter_id_to_inst	\ id -- inst
	\ in: 	o: s - display name
	\ out:	none
	{ "METER-R1": 0, "METER-R2": 1, "METER-R3": 2 } 
	swap caseof
;

: meter_id_to_disp	\ id -- inst
	\ in: 	o: s - display name
	\ out:	none
	{ "METER-R1": "DISP-R1", "METER-R2": "DISP-R2", "METER-R3": "DISP-R3" } 
	swap caseof
;

\ ===============================================================================
\ GUI event handlers
\ Draw one scale tick and label
: draw_scale										\ gui ix item -- gui
	\ Start a path
	nip swap g:path swap						\ gui item 
	\ Extract the descriptor row
	a:open													\ gui tic-type x-offset color text
	\ Set tic color
	4 pick rot											\ gui tic-type x-offset text gui color
	g:scolor												\ gui tic-type x-offset text gui
	\ Moveto tic start position
	2 pick M_INSET n:+ M_BASE				\ gui tic-type x-offset text gui x-offset+inset y-offset
	g:moveto 												\ gui tic-type x-offset text gui
	\ Draw tic
	3 roll													\ gui x-offset text gui tic-type
	M_TICK1 n:= if 
		M_TOP1 												\ gui x-offset text gui y-top1
	else 
		M_TOP2  											\ gui x-offset text gui y-top2
	then
	3 pick  M_INSET n:+ swap 				\ gui x-offset text gui x-offset+inset y-topn
	g:lineto												\ gui x-offset text gui
	\ Draw tic legend
	rot M_TINSET n:+	M_TEXT 3 roll	\ gui gui x-offset+inset y-text text
	g:draw-text-at									\ gui gui 
	\ Close path and stroke
	g:/path g:stroke drop						\ gui
;

: meter_dbm_to_x	\ dbm -- x
	n:abs M_S_0 n:abs swap  n:-
	X_PER_DBM n:* M_INSET n:+ n:bint
;

\ Draw meter 
: rx_meter_draw	\ gui --
	\ Draw base line
	2 g:line-width
	"white:70" g:scolor
	g:path
	M_INSET M_BASE g:moveto
	M_DIV M_BASE g:lineto
	g:/path g:stroke
	"red:70" g:scolor
	g:path
	M_DIV M_BASE g:moveto
	M_END M_BASE g:lineto
	g:/path g:stroke
	\ Draw scale
	g:c-text
	meter_sig_scale ' draw_scale a:each drop
	\ Draw dynamic data
	st_rad_online@ if
		"red" g:scolor
		4 g:line-width
		g:path
		M_INSET M_DYN_BASE g:moveto
		"id" g:m@ meter_id_to_disp dup
		radio_ref rx_meter_ref swap radio_ref_unlock
		meter_dbm_to_x dup M_INSET n:< if drop M_INSET then
		dup M_END n:> if drop M_INSET then
		M_DYN_BASE g:lineto
		g:/path g:stroke
	then
	drop
;

\ Render
: rx_meter-timer	\ gui --
	g:invalidate
;

\ ============================================================================
\ Create a meter panel
: rx_meter_panel_new				\ id bounds -- new-meter-gui
	rx_meter_panel @ G:clone nip	\ id bounds meter-clone
	"id" 3 pick m:!						\ id bounds meter-clone
	"name" 3 pick m:! 				\ id bounds meter-clone
	"bounds" 2 pick m:! 			\ id bounds meter-clone
	nip 											\ id meter-clone
	g:new nip  								\ id new-meter-gui new-meter-gui
;

\ ============================================================================
\ Subscriber Events
\ Obey the SED and consume the data
: rx_meter_subscribe	\  --
  \ Subscribe to events
;

\ Restore namespace	
ns: user	
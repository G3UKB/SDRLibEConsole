(*
	band.8th
 
  Band buttons component for the DynamicSDR application
 
 Copyright C 2017 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
*)

\ Use SDR namespace
ns: sdr

: band_lookup [
		["160",1900000],
		["80",3700000],
		["60",5276000],
		["40",7100000],
		["30",10200000],
		["20",14200000],
		["17",18100000],
		["15",21200000],
		["10",29000000]
	]
;

: band-children \ -- arr
  a:new
  (
    >r
    m:new 
      "kind" "btn" m:!
      "label" band_lookup r@ a:@ nip 0 a:@ nip m:!
      "freq" band_lookup r> a:@ nip 1 a:@ nip m:!
      "font" 14 m:!
      "bg" "lightcyan4" m:!
      "fg" "blue" m:!
      "alpha" 0.8 m:!
      "click" "sdr:new_band" m:!
    a:push
  ) 0 8 loop 
;

\ Be nice to use a new kind but layouts not supported yet 
{
	"kind" : "box",
	"alpha" : 0.5,
	"bg" : "lightcyan4",
	"visible" : false,
	"grid" : {"cols" : 9 , "rows" : 1 },
	"children" : ` band-children `
} var, band_panel

\ ============================================================================
\ GUI Events
\ FIXME - get the correct band frequency.
: new_band	\ g --
	\ Get the target freq
	"freq" g:m@ >r 
	\ Hide the popup
	g:parent 
	"id" g:m@ >r
	g:hide 
	g:parent
	\ Toggle the parent button on again
	{"BAND-R1" : "r1-band-btn", "BAND-R2" : "r2-band-btn", "BAND-R3" : "r3-band-btn"}
	r@ caseof
	g:child false g:on
	\ Set the frequency
	r> r> false
	{"BAND-R1" : ' model_r1_set_freq , "BAND-R2" : ' model_r2_set_freq , "BAND-R3" : ' model_r3_set_freq }
	3 pick caseof
	true
	{"BAND-R1" : ' model_r1_set_freq , "BAND-R2" : ' model_r2_set_freq , "BAND-R3" : ' model_r3_set_freq }
	3 pick caseof
;

\ ============================================================================
\ Subscriber Events


\ ============================================================================
\ Create a band button panel
: band_panel_new						\ id bounds -- new-band-gui
	band_panel @ G:clone nip	\ id bounds band-clone
	"id" 3 pick m:!
	"name" 3 pick m:! 
	"bounds" 2 pick m:! 
	nip nip g:new
;

\ Initialise a band panel instance
: band_panel_init	\  gui -- gui
;
 
\ Subscribe to events
: band_subscribe	\ --
	\ Subscribe to events
;

\ Restore namespace	
ns: user	

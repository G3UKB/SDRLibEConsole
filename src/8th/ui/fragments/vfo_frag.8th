(*
	vfo_frag.8th
 
  VFO control for radios
 
 Copyright C 2019 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
     
  Fragment - a UI fragment is a composable component that can be arranged into
  a window for rendering. The fragment itself may use a generic component part
  such as a vfo or button box. The fragment is responsible for interactions with 
  the rest of the system by sending and receiving events.
*)

needs stack/3drop

\ Use SDR namespace
ns: sdr
with: fr.gs
with: fr.ps

\ ========================================
\ Variables


\ ===============================================================================
\ PRIVATE
\	Convention: all private words start __
\ ===============================================================================

\ ========================================
\ Events

\ ----------------------------------
\ Get frequency from event data
\ {"cb" w, "data" [data, sender, w|null] -- freq-in-hz
: __data_get_freq	SED: m -- n
	"data" m:@ nip 0 a:@ nip
;

\ ----------------------------------
\ Get gui ref for this VFO
\ gui-name -- gui
: __vfo_gui_ref	SED: s -- g
	g_cache_get
;

\ ----------------------------------
\ Update frequency in the VFO gui object
\ freq vfo-gui -- vfo-gui
: __update_gui_map	SED: n g -- g
	"freq" rot g:m!
;

\ ----------------------------------
\ Update radio frequency
\ freq name --
: vfo_tail	SED: n s --
	__vfo_gui_ref
	__update_gui_map
	__reset_all_digits
	g:invalidate drop
;

\ {"cb" w, "data" [data, sender, w|null]} -- 
: vfo_r1_freq	SED: m -- 
	__data_get_freq
	VFO-1 vfo_tail
;
: vfo_r2_freq	SED: m -- 
	__data_get_freq
	VFO-2 vfo_tail
;
: vfo_r3_freq	SED: m -- 
	__data_get_freq
	VFO-3 vfo_tail
;

\ ========================================
\ Subscriptions

\ ----------------------------------
\ Subscribe to VFO-n events
\  --
: vfo_1_subscribe	SED:  --
	 t:name@ ' vfo_r1_freq UI_R1_FREQ subscribe
;
: vfo_2_subscribe	SED:  --
	 t:name@ ' vfo_r2_freq UI_R2_FREQ subscribe
;
: vfo_3_subscribe	SED:  --
	 t:name@ ' vfo_r3_freq UI_R3_FREQ subscribe
;

\ ========================================
\ Callbacks

\ ----------------------------------
\ Publish frequency update
\ freq-in-hz -- 
: vfo_1_publish SED: n --
	\ Set null callback word as no response required.
	a:new swap a:push SYS_R1_FREQ publish drop
;
: vfo_2_publish SED: n --
	\ Set null callback word as no response required.
	a:new swap a:push SYS_R2_FREQ publish drop
;
: vfo_3_publish SED: n --
	\ Set null callback word as no response required.
	a:new swap a:push SYS_R3_FREQ publish drop
;

\ ===============================================================================
\ PUBLIC
\ ===============================================================================

\ ----------------------------------
\ Create VFO for radio(s)
\ name bounds -- vfo-n-gui
: vfo_frag_new	SED: s s -- g
	\ Create
	swap dup	>r \ bounds name name
	{ VFO-1: ' vfo_1_publish , VFO-2: ' vfo_2_publish , VFO-3: ' vfo_3_publish } 
	r@ m:@ nip 
	rot swap 	\ name bounds callback
	vfo_new
	\ Initialise
	vfo_init
	\ Subscribe
	{ VFO-1: ' vfo_1_subscribe , VFO-2: ' vfo_2_subscribe , VFO-3: ' vfo_3_subscribe } 
	r> m:@ nip w:exec
;

\ ===============================================================================
\ Restore namespace	
ns: user	

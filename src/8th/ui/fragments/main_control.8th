(*
	main_control.8th
 
  Main buttons for radio control
 
 Copyright C 2019 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
     
  Fragment - a UI fragment is a composable component that can be arranged into
	a window for rendering. The fragment itself may use a generic component part
	such as a vfo or button box. The fragment is responsible for interactions with 
  the rest of the system by sending and receiving events.
*)

needs stack/3drop

\ ========================================
\ Testing only
false var, main_control_test

\ ----------------------------------
main_control_test @ #if
	\ Includes
	"../common/g_cache.8th" f:include
	"../components/buttons.8th" f:include
	\ needs debug/sed
	\ true SED-CHECK
	\ needs debug/trace
	\ dbg:line-info
#then
\ ========================================

\ Use SDR namespace
ns: sdr
with: fr.gs
with: fr.ps

\ ========================================
\ Variables


\ ===============================================================================
\ PRIVATE
\	Convention: all private words start __
\ ===============================================================================

\ ========================================
\ Events
\ All buttons click in group
\ gui -- gui
: mc_button_click	SED: g -- g
	"user-data" g:m@
	"start" s:= if
		SEQUENCER_TASK ' rm_start_radio [0] msg!
	else
		SEQUENCER_TASK ' rm_stop_radio null msg!
	then
;

\ ========================================
\ Helpers
: mc_button_spec	SED: -- m
	{
		"id" : "BB-MAIN",
		"rows" : 1, 
		"cols" : 2,
		"spec" : [
			["Start", "start", ' mc_button_click ],
			["Stop", "stop", ' mc_button_click ]
		] 
	}
;

\ ===============================================================================
\ PUBLIC
\ ===============================================================================

\ New button box according to spec
\ bounds -- main-control-gui
: mc_new	SED: s -- g
	\ Pop in the bounds
	mc_button_spec "bounds" rot m:!
	new_button_box
;

\ ===============================================================================
\ Restore namespace	
ns: user	

\ ===============================================================================
\ ===============================================================================
\ Testing
\ ===============================================================================

main_control_test @ #if
	with: sdr
	with: fr.gs
	with: fr.ps

	true app:isgui !
	4 json-pretty
	
	\ ----------------------------------
	\ Entry point 
	\ Create a test window and add the button box
	: app:main

			\ A minimal window to hold our test component
			{
				"kind" : "win",
				"title" : "Main Control Test",
				"visible" : true,
				"ontop" : false,
				"bg" : "gray10",
				"resize-corner" : 20,
				"wide" : 400,
				"high" : 200,
				"top" : 100,
				"left" : 100,
				"children" : []
			} g:new dup "win" t:!
			\ Create the test button box
			"0,0,200,100" mc_new
			\ Add to the window
			"win" t:@ swap g:+child	 
	;
#then
(*
	g_cache.8th
 
  A simple cache for gui components.
 
 Copyright C 2019 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
     
  There are many named GUI components which fit into a hierarchy
	starting from the main window parent. Rather than dynamically walk the
	hierarchy to find the correct component instance they are cached
  here for quick easy named access. 
*)

\ ========================================
\ Testing only
false var, g_cache_test

\ ----------------------------------
g_cache_test @ #if
	\ Includes
	\ needs debug/sed
	\ true SED-CHECK
	\ needs debug/trace
	\ dbg:line-info
#then
\ ========================================

\ Set namespace
ns: sdr

\ Cache entries
{} var, g_cache

\ ----------------------------------
\ Add to cache
\ name g --
: g_cache_add	SED: s * --
	g_cache @ -rot m:! drop
;

\ ----------------------------------
\ Retrieve from cache
\ name -- g
: g_cache_get SED: s -- *
	g_cache @ 1 pick m:exists? if
		swap m:@ nip
	else
		\ Treat as fatal. If we need the component then it should be cached.
		drop "Not found GUI component %s!" s:strfmt throw
	then
;

\ ========================================
\ Restore namespace	
ns: user

\ ===============================================================================
\ ===============================================================================
\ Testing
\ ===============================================================================

g_cache_test @ #if

	\ Pull in the namespaces
	with: sdr
	
	"1" "abc" g_cache_add
	"2" "def" g_cache_add

	"1" g_cache_get . cr
	"2" g_cache_get . cr
	"1" g_cache_get . cr
	"2" g_cache_get . cr
	"3" g_cache_get . cr
	.s
bye
#then		
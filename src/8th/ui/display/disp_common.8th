(*
	disp_common.8th
 
  Calculations for the SDRLibEConsole displays
 
 Copyright C 2018 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
*)

\ ============================================================================

\ Set namespace
ns: sdr

\ ========================================
\ Panadapter and waterfall calculations

\ ----------------------------------
\ Total absolute span 
: span_db low_db n:abs high_db n:+ ;
\ db increment per division in grid

\ ----------------------------------
: step_db span_db divs  n:/ ;

\ ----------------------------------
\ Given the grid number (e.g. 1-6) return the db
\ Return a string label at the given grid point
: inter_db	SED: n -- s
	\ in: 	0: n - grid number where 0 is topmost grid line
	\ out:	0: s - signed db as a string
	divs n:- n:abs step_db n:* low_db n:+ >s ;

\ ----------------------------------	
\ dBm per pixel in the y plane
: dBm_pp	\ disp_id -- dBm-pp 
	get_disp_win_metrics 1 a:@ nip span_db n:/ ;

\ ========================================
\ Frequency calculations

\ ----------------------------------	
\ Start freq for display
: start_freq	\ disp_id --
	get_disp_mid_freq span_freq 2 n:/ n:- 1000000 n:/ n:float ;

\ ----------------------------------	
\ Step freq per div
: step_freq
	span_freq divs n:/ 1000000 n:/ n:float ;

\ ----------------------------------	
\ Return one string freq value
: freq_str \ idx disp_id -- freq_str
	start_freq swap step_freq n:* n:+
	"%.3f" s:strfmt ;

\ ----------------------------------	
\ Freq per pixel in the x plane
: freq_pp	\ disp_id -- freq-pp 
	span_freq swap get_disp_disp_metrics 0 a:@ nip n:/ ;

\ ----------------------------------	
\ Given an x offset into the display area return the frequency at x
: x_to_freq								\ x disp_id -- freq
	dup 										\ x disp_id spec-id 
	start_freq 1000000 n:* 	\ x disp_id start-freq 
	swap 										\ x start-freq disp_id
	freq_pp 								\ x start-freq freq-pp
	rot 
	n:* 
	n:+ 1000000 n:/ 				\ x freq-at-x
;

\ ========================================
\ Restore namespace	
ns: user
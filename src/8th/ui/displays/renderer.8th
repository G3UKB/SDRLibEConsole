(*
	renderer.8th
 
  Display renderer component for the SDRLibEConsole application
 
 Copyright C 2019 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
     
  This component can be multi-instanced to provide a renderer for the pan
  and waterfall displays.
*)

needs stack/3drop

\ ========================================
\ Testing only
false var, renderer_test

\ ----------------------------------
renderer_test @ #if
	\ Includes
	"E:/Projects/Framework/trunk/src/8th/gen_server.8th" f:include
	"E:/Projects/Framework/trunk/src/8th/pub_sub.8th" f:include
	"../../common/app_defs.8th" f:include
	"../../common/radio_defs.8th" f:include
	"../common/layout.8th" f:include
	"../common/font_cache.8th" f:include
	"../common/g_cache.8th" f:include
	\ needs debug/sed
	\ true SED-CHECK
	\ needs debug/trace
	\ dbg:line-info
#then
\ ========================================

\ Use SDR namespace
ns: sdr
with: fr.gs
with: fr.ps

\ ===============================================================================
\ PRIVATE
\ Convention: private words start: 		__svr_evnt_
\ ===============================================================================

\ ----------------------------------
\ Draw horizontal/vertical label
: draw_label	SED: g n a -- g
	\ in: 	0: a - text descriptor [text,x,y]
	\				1: n - idx
	\				2: g - gui
	\ out:	0: g - gui
	nip
	1 a:@ 
	swap 2 a:@
	swap 0 a:@
	nip
	g:draw-text-at 
;
	
\ ----------------------------------
\ Add horizontal/vertical grid line to path
: doline	SED: g n a -- g
	\ in: 	0: a - fixed_data_itm [x-start, y-start, x-stop, y-stop]
	\				1: n - idx
	\				2: g - gui
	\ out:	0: g - gui
	nip											\ gui fixed_data_itm
	0 a:@ swap 1 a:@ 				\ gui x-start fixed_data_itm y-start
	rot swap								\ gui fixed_data_itm x-start y-start
	3 pick swap rot swap		\ gui fixed_data_itm gui x-start y-start
	g:moveto								\ gui fixed_data_itm gui
	swap 2 a:@ swap 3 a:@ 	\ gui gui x-stop fixed_data_itm y-stop
	nip											\ gui gui x-stop y-stop
	g:lineto drop	
;	

\ ----------------------------------
\ Make the grid path
: make_grid_path	SED: g -- g
	\ in: 	0: g - gui
	\ out:	0: g - gui	
	"inst_data" t:@ fixed_data_ref ' doline a:each drop 
;

\ ----------------------------------
\ Draw the grid with dBm and freq labels
: draw_grid	SED: g -- g
	\ in: 	0: g - gui
	\ out:	0: g - gui	
	"gray17" g:scolor
	g:clearpath
	g:path
	make_grid_path
	g:/path g:stroke
	\ Labels
	"yellow:50" g:scolor
	"inst_data" t:@ h_label_data_ref ' draw_label a:each drop
	"inst_data" t:@ v_label_data_ref ' draw_label a:each
	drop 
;

\ ========================================
\ Render all display components
: draw_all	SED: g --
	\ in: 	0: g - gui
	\ out:	none
	
	\ Common settings
	"gray11" g:fillall
	1 g:line-width
	
	\ Draw the display components
	draw_grid
	\ draw_pan
	\ draw_waterfall
	\ draw_center_freq_line
	\ draw_filter_overlay
	\ draw_mouse_pos
;

\ ===============================================================================
\ PUBLIC
\ ===============================================================================

: renderer_render	SED: n --
	"Render: " . . cr
	\ drop
	\ "data-r1" t:@ . cr
	{} "data-r1" t:!
	\ "data-r1" t:@ free
	\ {} "data-r1" t:!
	ns:m pool-clear
	ns:a pool-clear
	ns:s pool-clear
	ns:n pool-clear
	\ .stats
	\ depth . cr
;

\ ========================================
\ Reset namespace
ns: user

\ ===============================================================================
\ ===============================================================================
\ Testing
\ ===============================================================================

renderer_test @ #if

#then
(*
	main_window.8th
 
  Main window for the SDRLibE application
 
 Copyright C 2018 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
*)

\ ============================================================================

needs gui/msgdlg

\ Define our SDR namespace
ns: sdr

(*
	The main window is built up in sections as it is dynamic depending on the number
	of receivers.
*)

\ ===============================================================================
\ MAIN WINDOW DEFINITION
\ ===============================================================================

\ ===============================================================================
\ Radio panels for 1,2 and 3 radios
\ Each radio box has all common interactors for the radio split into a label box
\ to hold status for each radio and a button box for the common buttons for each radio.
{
	"kind" : "box",
	"name" : "radio-1",
	"bounds" : "0,20,parent.width, parent.height",
	"bg" : "gray10",
	"header" : "Radio 1",
	"headersize" : 30,
	"headerclr" : "gray17",
	"panelsize" : 180,
	"children" : 
	[
		{
			"kind" : "box",
			"name" : "r1-lbl-box",
			"bg" : "gray10",
			"fg" : "gold3",
			"bounds" : "0,0,80,50",
			"children" : [
				{
					"kind" : "box",
					"name" : "r1-lbl-box1",
					"bg" : "gray17",
					"fg" : "gold3",
					"grid" : {"cols" : 2 , "rows" : 2 , "defmargin" : 3},
					"children" : [
						{
							"kind" : "label",
							"name" : "r1-mode-lbl",
							"label" : "",
							"fg" : "green3",
							"bg" : "gray17",
							"font" : 12
						},
						{
							"kind" : "label",
							"name" : "r1-filt-lbl",
							"label" : "",
							"fg" : "green3",
							"bg" : "gray17",
							"font" : 12
						},
						{
							"kind" : "label",
							"name" : "r1-agc-lbl",
							"label" : "",
							"fg" : "green3",
							"bg" : "gray17",
							"font" : 12
						},
						{
							"kind" : "label",
							"name" : "r1-afgain-lbl",
							"label" : "",
							"fg" : "green3",
							"bg" : "gray17",
							"font" : 12
						}
					]
				}
			]
		},
		{
			"kind" : "btn",
			"name" : "r1-mode-btn",
			"autotoggle" : true,
			"label" : "Mode",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,50,50,70",
			"click" : "sdr:w_r1_mode_select"
		},
		{
			"kind" : "btn",
			"name" : "r1-filter-btn",
			"autotoggle" : true,
			"label" : "Filter",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,70,50,90",
			"click" : "sdr:w_r1_filter_select"
		},
		{
			"kind" : "btn",
			"name" : "r1-band-btn",
			"autotoggle" : true,
			"label" : "Band",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,90,50,110",
			"click" : "sdr:w_r1_band_select"
		},
		{
			"kind" : "btn",
			"name" : "r1-agc-btn",
			"autotoggle" : true,
			"label" : "AGC",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,110,50,130",
			"click" : "sdr:w_r1_agc_select"
		},
		{
			"kind" : "btn",
			"name" : "r1-afgain-btn",
			"autotoggle" : true,
			"label" : "AF Gn",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,130,50,150",
			"click" : "sdr:w_r1_af_gain"
		},
		{
			"kind" : "btn",
			"name" : "r1-audio-btn",
			"tooltip" : "Reroute audio here",
			"autotoggle" : false,
			"label" : "Audio >",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,160,50,180",
			"click" : "sdr:w_r1_audio_select"
		}
	]
} var, main_radio_1_panel

{
	"kind" : "box",
	"name" : "radio-2",
	"bounds" : "0,20,parent.width, parent.height",
	"bg" : "gray10",
	"header" : "Radio 2",
	"headersize" : 30,
	"headerclr" : "gray17",
	"panelsize" : 180,
	"children" :
	[
		{
			"kind" : "box",
			"name" : "r2-lbl-box",
			"bg" : "gray10",
			"fg" : "gold3",
			"bounds" : "0,0,80,50",
			"children" : [
				{
					"kind" : "box",
					"name" : "r2-lbl-box1",
					"bg" : "gray17",
					"fg" : "gold3",
					"grid" : {"cols" : 2 , "rows" : 2 , "defmargin" : 3},
					"children" : [
						{
							"kind" : "label",
							"name" : "r2-mode-lbl",
							"label" : "",
							"fg" : "green3",
							"bg" : "gray17",
							"font" : 12
						},
						{
							"kind" : "label",
							"name" : "r2-filt-lbl",
							"label" : "",
							"fg" : "green3",
							"bg" : "gray17",
							"font" : 12
						},
						{
							"kind" : "label",
							"name" : "r2-agc-lbl",
							"label" : "",
							"fg" : "green3",
							"bg" : "gray17",
							"font" : 12
						},
						{
							"kind" : "label",
							"name" : "r2-afgain-lbl",
							"label" : "",
							"fg" : "green3",
							"bg" : "gray17",
							"font" : 12
						}
					]
				}
			]
		},
		{
			"kind" : "btn",
			"name" : "r2-mode-btn",
			"autotoggle" : true,
			"label" : "Mode",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,50,50,70",
			"click" : "sdr:w_r2_mode_select"
		},
		{
			"kind" : "btn",
			"name" : "r2-filter-btn",
			"autotoggle" : true,
			"label" : "Filter",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,70,50,90",
			"click" : "sdr:w_r2_filter_select"
		},
		{
			"kind" : "btn",
			"name" : "r2-band-btn",
			"autotoggle" : true,
			"label" : "Band",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,90,50,110",
			"click" : "sdr:w_r2_band_select"
		},
		{
			"kind" : "btn",
			"name" : "r2-agc-btn",
			"autotoggle" : true,
			"label" : "AGC",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,110,50,130",
			"click" : "sdr:w_r2_agc_select"
		},
		{
			"kind" : "btn",
			"name" : "r2-afgain-btn",
			"autotoggle" : true,
			"label" : "AF Gn",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,130,50,150",
			"click" : "sdr:w_r2_af_gain"
		},
		{
			"kind" : "btn",
			"name" : "r2-audio-btn",
			"tooltip" : "Reroute audio here",
			"autotoggle" : false,
			"label" : "Audio >",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,160,50,180",
			"click" : "sdr:w_r2_audio_select"
		}
	]
} var, main_radio_2_panel

{
	"kind" : "box",
	"name" : "radio-3",
	"bounds" : "0,20,parent.width, parent.height",
	"bg" : "gray10",
	"header" : "Radio 3",
	"headersize" : 30,
	"headerclr" : "gray17",
	"panelsize" : 180,
	"children" : 
	[
		{
			"kind" : "box",
			"name" : "r3-lbl-box",
			"bg" : "gray10",
			"fg" : "gold3",
			"bounds" : "0,0,80,50",
			"children" : [
				{
					"kind" : "box",
					"name" : "r3-lbl-box1",
					"bg" : "gray17",
					"fg" : "gold3",
					"grid" : {"cols" : 2 , "rows" : 2 , "defmargin" : 3},
					"children" : [
						{
							"kind" : "label",
							"name" : "r3-mode-lbl",
							"label" : "",
							"fg" : "green3",
							"bg" : "gray17",
							"font" : 12
						},
						{
							"kind" : "label",
							"name" : "r3-filt-lbl",
							"label" : "",
							"fg" : "green3",
							"bg" : "gray17",
							"font" : 12
						},
						{
							"kind" : "label",
							"name" : "r3-agc-lbl",
							"label" : "",
							"fg" : "green3",
							"bg" : "gray17",
							"font" : 12
						},
						{
							"kind" : "label",
							"name" : "r3-afgain-lbl",
							"label" : "",
							"fg" : "green3",
							"bg" : "gray17",
							"font" : 12
						}
					]
				}
			]
		},
		{
			"kind" : "btn",
			"name" : "r3-mode-btn",
			"autotoggle" : true,
			"label" : "Mode",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,50,50,70",
			"click" : "sdr:w_r3_mode_select"
		},
		{
			"kind" : "btn",
			"name" : "r3-filter-btn",
			"autotoggle" : true,
			"label" : "Filter",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,70,50,90",
			"click" : "sdr:w_r3_filter_select"
		},
		{
			"kind" : "btn",
			"name" : "r3-band-btn",
			"autotoggle" : true,
			"label" : "Band",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,90,50,110",
			"click" : "sdr:w_r3_band_select"
		},
		{
			"kind" : "btn",
			"name" : "r3-agc-btn",
			"autotoggle" : true,
			"label" : "AGC",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,110,50,130",
			"click" : "sdr:w_r3_agc_select"
		},
		{
			"kind" : "btn",
			"name" : "r3-afgain-btn",
			"autotoggle" : true,
			"label" : "AF Gn",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,130,50,150",
			"click" : "sdr:w_r3_af_gain"
		},
		{
			"kind" : "btn",
			"name" : "r3-audio-btn",
			"tooltip" : "Reroute audio here",
			"autotoggle" : false,
			"label" : "Audio >",
			"bg0" : "gray10",
			"fg0" : "gold3",
			"fg" : "orangered2",
			"bg" : "gray1",
			"font" : 13,
			"bounds" : "0,160,50,180",
			"click" : "sdr:w_r3_audio_select"
		}
	]
} var, main_radio_3_panel

\ ===============================================================================
\ Top level window:
\ The window contains the menu and two button boxes containing buttons that 
\ are common to all radios for control and common functions.
{
	"kind" : "win",
	"title" : "SDRLibEConsole",
	"visible" : false,
	"ontop" : false,
	"bg" : "gray10",
	"resize-corner" : 20,
	"close" : "sdr:w_close",
	"font" : "Arial 10",
	"timer-period" : 200,
	"timer" : "sdr:w_timer",
	"children" :
	[
		{
			"kind" : "menubar",
			"bounds" : "0,0,parent.width,25",
			"font" : "Arial 14",
			"menu" : [ [ "File",0,"Exit",1 ], [ "Config",0,"Options",2 ], [ "Alex",0,"Filters",3 ] ],
			"menu-selected" : "sdr:w_menu_select"
		},
		{
			"kind" : "box",
			"name" : "button-box",
			"bounds" : "0,25,parent.width,75",
			"bg" : "gray10",
			"children" :
			[
				{
					"kind" : "btn",
					"name" : "discover",
					"label" : "Discover",
					"bg" : "gray10",
					"fg" : "orangered2",
					"font" : 16,
					"enabled" : false,
					"bounds" : "5,5,90,40",
					"click" : "sdr:w_discover"
				},
				{
					"kind" : "btn",
					"name" : "radio-state",
					"label" : "Start",
					"bg0" : "gray10",
					"fg0" : "green3",
					"fg" : "orangered2",
					"bg" : "gray1",
					"font" : 16,
					"autotoggle" : true,
					"bounds" : "95,5,180,40",
					"enabled" : false,
					"click" : "sdr:w_radio_run"
				},
				{
					"kind" : "group",
					"bg" : "gray",
					"fg" : "gray25",
					"bounds" : "200,0,202,50"
				},
				{
					"kind" : "btn",
					"name" : "m-tx",
					"label" : "TX...",
					"bg0" : "gray10",
					"fg0" : "green3",
					"fg" : "orangered2",
					"bg" : "gray1",
					"font" : 16,
					"autotoggle" : true,
					"bounds" : "225,5,310,40",
					"click" : "sdr:w_tx_win"
				},
				{
					"kind" : "btn",
					"name" : "m-wbs",
					"label" : "WBS...",
					"bg0" : "gray10",
					"fg0" : "green3",
					"fg" : "orangered2",
					"bg" : "gray1",
					"font" : 16,
					"autotoggle" : true,
					"bounds" : "320,5,405,40",
					"click" : "sdr:w_wbs_win"
				},
				{
					"kind" : "btn",
					"name" : "exit",
					"label" : "Exit",
					"bg" : "gray10",
					"fg" : "red2",
					"font" : 16,
					"bounds" : "parent.width-90,5,parent.width-5,40",
					"click" : "sdr:w_quit"
				}
			]
		},
		{
			"kind" : "box",
			"name" : "common-box",
			"bounds" : "0,75,parent.width,100",
			"bg" : "gray15",
			"children" :
			[
				{
					"kind" : "btn",
					"name" : "m-HF-PRE",
					"label" : "HF-PRE",
					"bg" : "gray10",
					"fg" : "green3",
					"font" : 14,
					"bounds" : "5,3,90,22",
					"autotoggle" : true,
					"click" : "sdr:w_hf_pre"
				},
				{
					"kind" : "btn",
					"name" : "m-6M-PRE",
					"label" : "6M-PRE",
					"bg" : "gray10",
					"fg" : "green3",
					"font" : 14,
					"bounds" : "95,3,180,22",
					"autotoggle" : true,
					"click" : "sdr:w_6m_pre"
				},
				{
					"kind" : "label",
					"label" : "Attn",
					"fg" : "white:70",
					"bg" : "gray15",
					"font" : 14,
					"bounds" : "190,3,210,22"
					
				},
				{
					"kind" : "combo",
					"name" : "m-attn",
					"editable" : 0,
					"bg" : "gray15",
					"fg" : "green3",
					"font" : 14,
					"empty-text" : "Please select",
					"no_choices" : "Empty",
					"items" : ["0dB","10dB","20dB","30dB"],
					"selected" : 0,
					"bounds" : "215,3,300,22",
					"changed" : "sdr:w_attn"
				},
				{
					"kind" : "btn",
					"name" : "m-audio",
					"label" : "< Audio",
					"tooltip" : "Revert to configured audio routing",
					"bg" : "gray10",
					"fg" : "orangered2",
					"font" : 14,
					"bounds" : "parent.width-105,3,parent.width-5,22",
					"autotoggle" : false,
					"click" : "sdr:w_default_audio"
				}
			]
		}
	]
} var, main_window_obj

\ ===============================================================================
\ Concertina panels:
\ The radios are contained within a concertina panel
\ The correct concertina panel is used depending on the number of radios.
\ The children of the concertina panel are the radio panels.
{
	"kind" : "concertina",
	"name" : "concertina",
	"bounds" : "0,100,parent.width,parent.height",
	"bg" : "gray10",
	"panels" :
	[
		` sdr:main_radio_1_panel @ `
	]
} var, concertina_panel_radios_1

{
	"kind" : "concertina",
	"name" : "concertina",
	"bounds" : "0,100,parent.width,parent.height",
	"bg" : "gray10",
	"panels" :
	[
		` sdr:main_radio_1_panel @ `,
		` sdr:main_radio_2_panel @ `
	]
} var, concertina_panel_radios_2

{
	"kind" : "concertina",
	"name" : "concertina",
	"bounds" : "0,100,parent.width,parent.height",
	"bg" : "gray10",
	"panels" :
	[
		` sdr:main_radio_1_panel @ `,
		` sdr:main_radio_2_panel @ `,
		` sdr:main_radio_3_panel @ `
	]
} var, concertina_panel_radios_3

\ ===============================================================================
\ MAIN WINDOW DEFINITION END
\ ===============================================================================

\ ===============================================================================
\ EVENT MANAGEMENT
\ ===============================================================================

\ ===============================================================================
\ Window management

\ Quit button pressed so just exit
: w_quit	SED: g --
	g:quit
;

\ ----------------------------------
\ Ask first
: main_quit?	SED: n --
	0 n:= if g:quit then 
;

\ ----------------------------------
\ Window closed, ask just in case		
: w_close	SED: g --
	{
		"type" : 1,
		"title" : "Quit?",
		"msg" : "Do you really want to Quit?",
		"cb" : ( sdr:main_quit? ) ,
		"buttons" : ["Quit", "Cancel"],
		"wide" : 200,
		"high" : 100,
		"bg" : "gray",
		"resize-border" : 0
	} g:msgdlg 
;

\ ===============================================================================
\ GUI idle timer

: __set_run_state	SED: T --
	if
	\ Disable discovery
		main_window @ "button-box" g:child dup "discover" g:child false g:enable drop
		\ Enable start
		"radio-state" g:child true g:enable drop
	else
		\ Enable discovery
		main_window @ "button-box" g:child dup "discover" g:child true g:enable drop
		\ Disable start
		"radio-state" g:child false g:enable drop
	then
;

\ ----------------------------------
\ The timer is used to maintain the GUI state
: w_timer	SED: g --
	\ Radio on-line status
	st_rad_online@ __set_run_state ;

\ ===============================================================================
\ Menu management

\ Show options window
: do_options	SED: g --
	\ options @ g:show drop
;

\ ----------------------------------
\ Show Alex window
: do_alex	SED: g --
	\ alex_window @ g:show drop
;

\ ----------------------------------
\ Select from menu items	
: w_menu_select	SED: g n --
	\ in: 	0: n - menu index
	\				1: g - gui
	\ out:	none
	[ null , ' w_quit , ' do_options , ' do_alex ]
	swap caseof
;

\ ===============================================================================
\ Common functions

\ HF preamp on/off
: w_hf_pre	SED: g --
	g:on? if
		PRE_ON
	else
		PRE_OFF 
	then
	\ cco_preamp
;

\ ----------------------------------
\ 6M preamp on/off
: w_6m_pre	SED: g --
	g:on? if
		PRE_ON
	else
		PRE_OFF 
	then
	\ cco_6mpreamp
;

\ ----------------------------------
\ Select attenuator
: w_attn	SED: g n s --
	\ in: 	0: n - menu index
	\				1: g - gui
	\				2: s - value
	\ out:	none
	drop 
	\ cco_alex_attn
;

\ ----------------------------------
\ Revert to the audio routes in the options
: evt_default_audio	SED: g --
	\ c_i_server_revert_audio_outputs
;

\ ========================================
\ Radio Control
\ Should discovery fail then this button will be enabled to re-discover

\ This button is enabled when discovery failed at startup
\ Discovery will be run again which will set the state variables
\ The button is state adjusted in the idle timer event
: w_discover	\ gui --
	true 1 ' conn_try_connect t:task-n t:wait
	\ 0.1 sleep
;

\ ----------------------------------
\ Start/stop radio depending on current state
\ The button state is adjusted in the idle timer event
: w_radio_run	SED: g --
	\ Check radio state
	st_rad_running@ if
		\ Running, so stop radio
		\ Set button label to "Start"
		"Start" g:text
		\ Stop the radio
		false 1 ' conn_try_radio t:task-n t:wait
		\ ToDo: WBS stuff
		\ Stop WBS if its running
		\ true inhibit_wbs !
		\ wbs_window @ g:hide drop main_window @ "button-box" g:child "m-wbs" g:child false g:on
	else
		\ Stopped so start radio
		\ Set button label to "Stop"
		"Stop" g:text
		true 1 ' conn_try_radio t:task-n t:wait
	then
	\ 0.1 sleep
;

\ ToDo: Sort other windows
(*
\ ----------------------------------
\ Show/hide the TX window
: w_tx_win	\ g --
	g:on? if
		\ Show the window
		tx_window @ g:show
	else
		\ Hide the window
		tx_window @ g:hide
	then
;

\ ----------------------------------
\ Show/hide the WBS window
: w_wbs_win	\ g --
	inhibit_wbs @ if false inhibit_wbs ! ;; then
	g:on? if
		\ Show the window
		wbs_window @ g:show
		\ Bounce metis and start IQ and WBS
		\ Temporarily pause the exchange task during the reset
		false run_exchange
		task_dict @ "metis-task" m:@ nip dup "stop" t:push t:notify
		1.0 sleep
		task_dict @ "metis-task" m:@ nip dup "start-all" t:push t:notify
		true run_exchange
		\ Run the WBS thread
		true wbs_run !
	else
		\ Hide the window
		wbs_window @ g:hide
		\ Bounce metis and start IQ only
		\ Temporarily pause the exchange task during the reset
		false run_exchange
		task_dict @ "metis-task" m:@ nip dup "stop" t:push t:notify
		1.0 sleep
		task_dict @ "metis-task" m:@ nip dup "start-iq" t:push t:notify
		true run_exchange
		\ Run the WBS thread
		false wbs_run !
	then
;
*)

\ ========================================
\ Mode select
: w_r1_mode_select	\ g --
	"radio-1" "MODE-R1" get_window_target
	swap toggle_popup_panel drop
;

: w_r2_mode_select	\ g --
	"radio-2" "MODE-R2" get_window_target
	swap toggle_popup_panel drop
;

: w_r3_mode_select	\ g --
	"radio-3" "MODE-R3" get_window_target
	swap toggle_popup_panel drop
;	

\ ========================================
\ Filter select
: w_r1_filter_select	\ g --
	"radio-1" "FILTER-R1" get_window_target
	swap toggle_popup_panel drop
;

: w_r2_filter_select	\ g --
	"radio-2" "FILTER-R2" get_window_target
	swap toggle_popup_panel drop
;

: w_r3_filter_select	\ g --
	"radio-3" "FILTER-R3" get_window_target
	swap toggle_popup_panel drop
;

\ ======================================
\ Band select
: w_r1_band_select	\ g --
	"radio-1" "BAND-R1" get_window_target
	swap toggle_popup_panel drop
;

: w_r2_band_select	\ g --
	"radio-2" "BAND-R2" get_window_target
	swap toggle_popup_panel drop
;

: w_r3_band_select	\ g --
	"radio-3" "BAND-R3" get_window_target
	swap toggle_popup_panel drop
;

\ ========================================
\ AGC select
: w_r1_agc_select	\ g --
	"radio-1" "AGC-R1" get_window_target
	swap toggle_popup_panel drop
;

: w_r2_agc_select	\ g --
	"radio-2" "AGC-R2" get_window_target
	swap toggle_popup_panel drop
;

: w_r3_agc_select	\ g --
	"radio-3" "AGC-R3" get_window_target
	swap toggle_popup_panel drop
;

\ ========================================
\ AF-GAIN
: w_r1_af_gain	\ g --
	"radio-1" "AFGAIN-R1" get_window_target
	swap toggle_popup_panel drop
;

: w_r2_af_gain	\ g --
	"radio-2" "AFGAIN-R2" get_window_target
	swap toggle_popup_panel drop
;

: w_r3_af_gain	\ g --
	"radio-3" "AFGAIN-R3" get_window_target
	swap toggle_popup_panel drop
;

\ ========================================
\ Temporarily redirect audio outputs from a radio to both channels on first device
: w_r1_audio_select
	\ 0 "both" c_i_server_change_audio_outputs
;

: w_r2_audio_select
	\ 1 "both" c_i_server_change_audio_outputs
;

: w_r3_audio_select
	\ 2 "both" c_i_server_change_audio_outputs
;

\ ============================================================================
\ Initialise window dependent on number of radios

: add_child_common			\ radio_id ?-id bounds --
	main_window @					\ radio_id ?-id bounds gui 
	"concertina" g:child 	\ radio_id ?-id bounds concertina-gui
	3 roll								\ ?-id bounds concertina-gui radio_id
	g:child								\ ?-id bounds radio-gui
	2 pick rot						\ ?-id radio-gui ?-id bounds
;

\ Add child VFO
: add_child_vfo					\ radio_id vfo-id bounds --
	add_child_common
	vfo_new 							\ vfo-id radio-gui vfo-obj
	g:+child							\ vfo-id radio-gui
	1 pick								\ radio-gui vfo-id
	g:child 							\ radio-gui vfo-gui
	vfo_init 2drop				\ --
;

\ Add child mode panel
: add_child_mode-panel	\ gui radio_id mode_id bounds --
	add_child_common
	mode_panel_new 				\ mode_id radio-gui mode-obj
	g:+child							\ mode_id radio-gui
	2drop									\ --
;

\ Add child band panel
: add_child_band-panel	\ gui radio_id band_id bounds --
	add_child_common
	band_panel_new 				\ band_id radio-gui band-obj
	g:+child							\ band_id radio-gui
	2drop									\ --
;

\ Add child filter panel
: add_child_filter_panel	\ gui radio_id filter_id bounds --
	add_child_common
	filter_panel_new 				\ filter_id radio-gui filter-obj
	g:+child								\ filter_id radio-gui
	2drop										\ --
;

\ Add child AGC panel
: add_child_agc_panel	\ gui radio_id agc_id bounds --
	add_child_common
	agc_panel_new 				\ agc_id radio-gui agc-obj
	g:+child							\ agc_id radio-gui
	2drop									\ --
;

\ Add child AF-GAIN panel
: add_child_afgain_panel	\ gui radio_id afgain_id bounds --
	add_child_common
	afgain_panel_new 				\ afgain_id radio-gui afgain-obj
	g:+child								\ afgain_id radio-gui
	2drop										\ --
;
(*
\ Add child meter panel
: add_child_meter_panel		\ gui radio_id meter_id bounds --
	add_child_common
	rx_meter_panel_new 				\ meter_id radio-gui meter-obj
	g:+child								\ meter_id radio-gui
	2drop										\ --
;

\ Add child display panel
: add_child_disp_panel		\ gui radio_id disp_id bounds --
	add_child_common
	disp_panel_new 					\ spec_id radio-gui spec-obj
	rot 										\ radio-gui spec-obj spec_id
	disp_panel_init					\ radio-gui spec-obj
	g:+child								\ radio-gui
	drop										\ --
;
*)
\ ========================================
\ Create num-radios widgets
\ VFO panels
: vfo_radios_1	\ --
	"radio-1" "VFO-R1" "80,0,330,50" add_child_vfo
;

: vfo_radios_2	\ --
	"radio-1" "VFO-R1" "80,0,330,50" add_child_vfo
	"radio-2" "VFO-R2" "80,0,330,50" add_child_vfo
;

: vfo_radios_3	\ --
	"radio-1" "VFO-R1" "80,0,330,50" add_child_vfo
	"radio-2" "VFO-R2" "80,0,330,50" add_child_vfo
	"radio-3" "VFO-R3" "80,0,330,50" add_child_vfo
;

\ Mode panels
: mode_radios_1	\ --
	"radio-1" "MODE-R1" "85,50,385,70" add_child_mode-panel
;

: mode_radios_2	\ --
	"radio-1" "MODE-R1" "85,50,385,70" add_child_mode-panel
	"radio-2" "MODE-R2" "85,50,385,70" add_child_mode-panel
;

: mode_radios_3	\ --
	"radio-1" "MODE-R1" "85,50,385,70" add_child_mode-panel
	"radio-2" "MODE-R2" "85,50,385,70" add_child_mode-panel
	"radio-3" "MODE-R3" "85,50,385,70" add_child_mode-panel
;

\ Filter panels
: filter_radios_1	\ --
	"radio-1" "FILTER-R1" "85,70,535,90" add_child_filter_panel
;

: filter_radios_2	\ --
	"radio-1" "FILTER-R1" "85,70,535,90" add_child_filter_panel
	"radio-2" "FILTER-R2" "85,70,535,90" add_child_filter_panel
;

: filter_radios_3	\ --
	"radio-1" "FILTER-R1" "85,70,535,90" add_child_filter_panel
	"radio-2" "FILTER-R2" "85,70,535,90" add_child_filter_panel
	"radio-3" "FILTER-R3" "85,70,535,90" add_child_filter_panel
;

\ Band panels
: band_radios_1	\ --
	"radio-1" "BAND-R1" "85,90,445,110" add_child_band-panel
;

: band_radios_2	\ --
	"radio-1" "BAND-R1" "85,90,445,110" add_child_band-panel
	"radio-2" "BAND-R2" "85,90,445,110" add_child_band-panel
;

: band_radios_3	\ --
	"radio-1" "BAND-R1" "85,90,445,110" add_child_band-panel
	"radio-2" "BAND-R2" "85,90,445,110" add_child_band-panel
	"radio-3" "BAND-R3" "85,90,445,110" add_child_band-panel
;

\ AGC panels
: agc_radios_1	\ --
	"radio-1" "AGC-R1" "85,110,400,130" add_child_agc_panel
;

: agc_radios_2	\ --
	"radio-1" "AGC-R1" "85,110,400,130" add_child_agc_panel
	"radio-2" "AGC-R2" "85,110,400,130" add_child_agc_panel
;

: agc_radios_3	\ --
	"radio-1" "AGC-R1" "85,110,400,130" add_child_agc_panel
	"radio-2" "AGC-R2" "85,110,400,130" add_child_agc_panel
	"radio-3" "AGC-R3" "85,110,400,130" add_child_agc_panel
;

\ AF Gain panels
: afgain_radios_1	\ --
	"radio-1" "AFGAIN-R1" "85,130,200,150" add_child_afgain_panel
;

: afgain_radios_2	\ --
	"radio-1" "AFGAIN-R1" "85,130,200,150" add_child_afgain_panel
	"radio-2" "AFGAIN-R2" "85,130,200,150" add_child_afgain_panel
;

: afgain_radios_3	\ --
	"radio-1" "AFGAIN-R1" "85,130,200,150" add_child_afgain_panel
	"radio-2" "AFGAIN-R2" "85,130,200,150" add_child_afgain_panel
	"radio-3" "AFGAIN-R3" "85,130,200,150" add_child_afgain_panel
;
(*
\ Meter panels
: meter_radios_1	\ --
	"radio-1" "METER-R1" "parent.width-165,0,parent.width-15,50" add_child_meter_panel
;

: meter_radios_2	\ --
	"radio-1" "METER-R1" "parent.width-165,0,parent.width-15,50" add_child_meter_panel
	"radio-2" "METER-R2" "parent.width-165,0,parent.width-15,50" add_child_meter_panel
;

: meter_radios_3	\ --
	"radio-1" "METER-R1" "parent.width-165,0,parent.width-15,50" add_child_meter_panel
	"radio-2" "METER-R2" "parent.width-165,0,parent.width-15,50" add_child_meter_panel
	"radio-3" "METER-R3" "parent.width-165,0,parent.width-15,50" add_child_meter_panel
;

\ Display panels
: disp_radios_1	\ --
	"radio-1" "DISP-R1" "50,50,parent.width,parent.height" add_child_disp_panel
;

: disp_radios_2	\ --
	"radio-1" "DISP-R1" "50,50,parent.width,parent.height" add_child_disp_panel
	"radio-2" "DISP-R2" "50,50,parent.width,parent.height" add_child_disp_panel
;

: disp_radios_3	\ --
	"radio-1" "DISP-R1" "50,50,parent.width,parent.height" add_child_disp_panel
	"radio-2" "DISP-R2" "50,50,parent.width,parent.height" add_child_disp_panel
	"radio-3" "DISP-R3" "50,50,parent.width,parent.height" add_child_disp_panel
;
*)
\ ========================================
\ Called when run mode is entered
: evt_main_window	\ a -- 
	
	\ drop	\ Dont need data array its empty for this event
	
	\ Get the number of radios 
	st_rad_num_rx@ n:1- >r
	
	\ Set the main window size and position
	\ main_window @ model_win_get_size dup 0 n:> if
	\ 	\ Probably ok to use from model
	\ 	g:size
	\ 	model_win_get_pos g:xy
	\ else 
	\ 	\ Set the window size and position to default values
	\ 	main_window @ [ ( 610 350 g:size ) , ( 610 600 g:size ) , ( 610 900 g:size ) ] 
	\ 	r@ caseof 
	\ 	200 20 g:xy
	\ 	drop
	\ then
	
	\ Add the concertina panels
	main_window @	
	[ ` concertina_panel_radios_1 @ ` , ` concertina_panel_radios_2 @ ` , ` concertina_panel_radios_3 @ ` ] 
	r@ caseof g:new g:+child
	
	\ Now good to show
	g:show
	\ Clean up
	2drop drop
	
	\ At this point stack has one data item (not part of our SED) and rstack has num-radios
	\ Add num-radios instances of vfo, band, mode, filters, agc
	[ ' vfo_radios_1 , ' vfo_radios_2 , ' vfo_radios_3 ]
	r@ caseof
	\ [ ' meter_radios_1 , ' meter_radios_2 , ' meter_radios_3 ]
	\ r@ caseof 
	\ [ ' disp_radios_1 , ' disp_radios_2 , ' disp_radios_3 ]
	\ r@ caseof 
	[ ' mode_radios_1 , ' mode_radios_2 , ' mode_radios_3 ]
	r@ caseof
	[ ' filter_radios_1 , ' filter_radios_2 , ' filter_radios_3 ]
	r@ caseof 
	[ ' band_radios_1 , ' band_radios_2 , ' band_radios_3 ]
	r@ caseof 
	[ ' agc_radios_1 , ' agc_radios_2 , ' agc_radios_3 ]
	r@ caseof 
	[ ' afgain_radios_1 , ' afgain_radios_2 , ' afgain_radios_3 ]
	r@ caseof 
	rdrop
	
	\ Adjust visability
	\ radio_fcd? if
	\ 	\ We disable a few things for FCD mode
	\ 	main_window @ "button-box" g:child dup "m-tx" g:child false g:enable drop
	\ 	main_window @ "button-box" g:child dup "m-wbs" g:child false g:enable drop
	\ 	main_window @ "common-box" g:child dup "m-HF-PRE" g:child false g:enable drop
	\ 	main_window @ "common-box" g:child dup "m-6M-PRE" g:child false g:enable drop
	\ 	main_window @ "common-box" g:child dup "m-attn" g:child false g:enable drop
	\ then
;

\ ============================================================================
\ Window subscribe
: main_window_init	\ --
	main_window_obj @ g:new g:show
	\ This must be set after new and before showing
	"Arial 14" g:set-popup-font
	\ Store main window GUI
	main_window ! ;

: main_window_subscribe	\  --
	\ Subscribe to events
	st_rad_num_rx@ n:1- >r
	SYS_RUN_STATE ' evt_main_window fr:pubsub_subscribe 
	\ Do dependent subscribes
	r@ vfo_subscribe
	r@ mode_subscribe
	r@ band_subscribe
	r@ filter_subscribe
	r@ agc_subscribe
	r@ afgain_subscribe
	\ r@ rx_meter_subscribe
  \ r@ disp_subscribe
  rdrop
;

\ ============================================================================		
\ Restore namespace	
ns: user	


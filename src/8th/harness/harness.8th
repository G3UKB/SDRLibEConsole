(* 
	harness.8th
 
  Some helpers for the various module tests as many have the same requirements
 
 Copyright C 2019 by G3UKB Bob Cowdery
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 at your option any later version.
 
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
  The author can be reached by email at:   
     bob@bobcowdery.plus.com
*)

ns: harness 

with: fr.gs
with: fr.ps
with: sdr

\ ========================================
\ A minimal window
: harness_window
	{
		"kind" : "win",
		"title" : "Harness",
		"visible" : true,
		"ontop" : false,
		"bg" : "gray10",
		"resize-corner" : 20,
		"wide" : 400,
		"high" : 200,
		"top" : 100,
		"left" : 100,
		"children" :
		[
			{
				"kind" : "btn",
				"opaque" : "false",
				"effect" : "glow",
				"name" : "button",
				"bounds" : "10, 10, parent.width-10, parent.height-10",
				"min-wide" : 150,
				"min-high" : 150,
				"max-high" : 450,
				"bg"   : "pink",
				"font" : "20",
				"click" : "button_clicked",
				"label" : "Test Events"
			}
	]
	} g:new dup "win" t:!
;

\ ========================================
\ Register a standard 8th or user task
: harness_reg_task
	\ Must register REPL in the task repos to be able to reply
	t:curtask t:name@ reg!
	\ Set q to null on empty
	t:getq false q:throwing \ do not drop q else crashes
;

\ ========================================
\ All responses here
: harness_responses
	conn_decode_response if
		"Successful" log
	else
		"Failed!" log
	then
;

\ ========================================
\ Send a message, get a response
: sender
	a:new swap a:push ' harness_responses  +sender msg! response@ 
;

\ ========================================
\ Basic start radio with default audio
\ Note that this uses direct messaging with responses. Responses are output but
\ are not checked in the harness as some cases require things to run on.
: harness_init_connector
\ Initialise connector
	conn_init
	conn_subscribe
;

: harness_start_radio
	harness_reg_task
	"POLL" log
	CONNECTOR_TASK ' t_conn_poll null sender "Poll" log
	1 sleep
	"AUDIO" log
	CONNECTOR_TASK ' t_conn_set_default_route null sender "Set default route" log
	CONNECTOR_TASK ' t_conn_discover null sender "Discover" log
	CONNECTOR_TASK ' t_conn_start_server null sender "Start server" log
	CONNECTOR_TASK ' t_conn_start_radio 0 sender "Start radio" log
;

\ ========================================
\ Publish some radio settings
: harness_set_freq	\ freq --
	a:new swap a:push SYS_R1_FREQ publish
;

: harness_set_lsb	\ --
	[ ` CH_LSB ` ] SYS_R1_MODE publish
	[ ` CH_2K4 ` ] SYS_R1_FILT publish
;

: harness_set_am	\ --
	[ ` CH_AM ` ] SYS_R1_MODE publish
	[ ` CH_6K0 ` ] SYS_R1_FILT publish
;

: harness_set_fm	\ --
	[ ` CH_FM ` ] SYS_R1_MODE publish
	[ ` CH_4K0 ` ] SYS_R1_FILT publish
;
	
ns: user